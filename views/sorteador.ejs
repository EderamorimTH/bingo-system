<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Sorteador - Bingo</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/styles.css">
  <style>
    body { background: linear-gradient(135deg, #34d399, #3b82f6); font-family: Arial, sans-serif; }
    .highlight-box { background: rgba(255,255,255,0.9); border-radius: 12px; box-shadow: 0 4px 20px rgba(0,0,0,0.2); padding: 1.5rem; margin-bottom: 1.5rem; }
  </style>
</head>
<body class="flex items-center justify-center min-h-screen text-gray-800">
  <div class="w-full max-w-5xl p-6">
    <h1 class="text-4xl font-bold text-center mb-6 text-white drop-shadow-lg">Sorteador</h1>

    <div class="grid md:grid-cols-2 gap-6">
      <!-- Último Número Sorteado -->
      <div class="highlight-box text-center">
        <h2 class="text-2xl font-semibold text-gray-700">Último Número Sorteado</h2>
        <p id="lastNumber" class="text-6xl font-bold text-red-600">--</p>
        <p class="text-gray-600" id="lastFive">--</p>
      </div>

      <!-- Prêmio Atual + Marcação Manual -->
      <div class="highlight-box">
        <h2 class="text-2xl font-semibold text-gray-700 text-center">Prêmio Atual</h2>
        <p id="currentPrize" class="text-2xl text-center">--</p>

        <form id="markNumberForm" class="mt-4 flex gap-2 justify-center">
          <input type="number" id="manualNumber" name="number" min="1" max="75" class="border rounded p-2 w-24" placeholder="Nº">
          <input type="password" id="adminPassword" name="password" class="border rounded p-2 w-48" placeholder="Senha do ADM">
          <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Marcar Número</button>
        </form>
        <p id="manualMsg" class="mt-2 text-sm text-center"></p>
      </div>
    </div>

    <!-- Lista de Vencedores (fixos, não somem após reset) -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Vencedores (ordem de chegada)</h2>
      <table class="w-full border-collapse">
        <thead>
          <tr class="bg-gray-200">
            <th class="border p-2">#</th>
            <th class="border p-2">Nome</th>
            <th class="border p-2">Telefone</th>
            <th class="border p-2">Cartela</th>
            <th class="border p-2">Prêmio</th>
            <th class="border p-2">Data/Hora</th>
          </tr>
        </thead>
        <tbody id="winnersTable"></tbody>
      </table>
    </div>
  </div>

  <script>
    function getLetterNumber(n) {
      if (n >= 1 && n <= 15) return `B-${n}`;
      if (n <= 30) return `I-${n}`;
      if (n <= 45) return `N-${n}`;
      if (n <= 60) return `G-${n}`;
      if (n <= 75) return `O-${n}`;
      return n;
    }

    function formatPhone(p) {
      if (!p) return '--';
      return p.replace(/(\d{2})(\d{4,5})(\d{4})/, '($1) $2-$3');
    }

    function renderWinners(list) {
      const tbody = document.getElementById('winnersTable');
      tbody.innerHTML = '';
      list.forEach((w, i) => {
        const tr = document.createElement('tr');
        const dt = w.createdAt ? new Date(w.createdAt) : null;
        tr.innerHTML = `
          <td class="border p-2 text-center">${i + 1}</td>
          <td class="border p-2">${w.playerName || '--'}</td>
          <td class="border p-2">${formatPhone(w.phoneNumber)}</td>
          <td class="border p-2">${w.cartelaId || '--'}</td>
          <td class="border p-2">${w.prize || '--'}</td>
          <td class="border p-2">${dt ? dt.toLocaleString() : '--'}</td>
        `;
        tbody.appendChild(tr);
      });
    }

    function updateGameUI(game) {
      document.getElementById('lastNumber').textContent = game.lastNumber ? getLetterNumber(game.lastNumber) : '--';
      const lastFive = (game.drawnNumbers || []).slice(-5).reverse().map(getLetterNumber);
      document.getElementById('lastFive').textContent = lastFive.length ? lastFive.join(', ') : '--';
      document.getElementById('currentPrize').textContent = (game.currentPrize && game.currentPrize.trim()) ? game.currentPrize : '--';
    }

    // Inicial
    fetch('/game').then(r => r.json()).then(updateGameUI);
    fetch('/winners').then(r => r.json()).then(renderWinners);

    // Marcação manual
    document.getElementById('markNumberForm').addEventListener('submit', async e => {
      e.preventDefault();
      const number = document.getElementById('manualNumber').value;
      const password = document.getElementById('adminPassword').value;
      const msg = document.getElementById('manualMsg');
      msg.textContent = '';
      if (!number) return;

      try {
        const res = await fetch('/mark-number', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ number, password })
        });
        const data = await res.json();
        if (!res.ok) {
          msg.textContent = data.error || 'Erro ao marcar número';
          msg.className = 'mt-2 text-sm text-center text-red-700';
        } else {
          msg.textContent = `Número ${number} marcado com sucesso.`;
          msg.className = 'mt-2 text-sm text-center text-green-700';
          document.getElementById('manualNumber').value = '';
        }
      } catch {
        msg.textContent = 'Erro de comunicação com o servidor.';
        msg.className = 'mt-2 text-sm text-center text-red-700';
      }
    });

    // WebSocket: sempre re-renderiza a lista completa (ordem de chegada)
    const ws = new WebSocket((location.protocol === 'https:' ? 'wss://' : 'ws://') + window.location.host);
    ws.onmessage = e => {
      const data = JSON.parse(e.data);
      if (data.type === 'update') {
        updateGameUI(data.game);
        // winners já vem completo e ordenado pelo servidor
        renderWinners(data.winners || []);
      }
    };
  </script>
</body>
</html>
