<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bingo - Tela Pública</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/styles.css">
  <link rel="icon" href="data:;base64,iVBORw0KGgo=">
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
  <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-2xl">
    <h1 class="text-3xl font-bold text-center mb-6">Bingo</h1>
    <div id="startMessage" class="text-xl font-semibold text-center mb-4 animate-pulse hidden"></div>
    <div class="mb-4">
      <h2 class="text-xl font-semibold text-center">Prêmio Atual</h2>
      <p id="currentPrize" class="text-lg text-center">--</p>
    </div>
    <div class="mb-4">
      <h2 class="text-xl font-semibold text-center">Informações Adicionais</h2>
      <p id="additionalInfo" class="text-lg text-center">--</p>
    </div>
    <div class="mb-4">
      <h2 class="text-xl font-semibold text-center">Último Número Sorteado</h2>
      <p id="lastNumber" class="text-4xl font-bold text-center text-blue-600 animate-pulse">--</p>
    </div>
    <div class="mt-4">
      <h2 class="text-xl font-semibold text-center">Números Sorteados por Letra</h2>
      <div id="drawnNumbers" class="mt-2">
        <div class="mb-4">
          <h3 class="text-lg font-semibold">B (1-15)</h3>
          <div id="bNumbers" class="grid grid-cols-5 gap-2"></div>
        </div>
        <div class="mb-4">
          <h3 class="text-lg font-semibold">I (16-30)</h3>
          <div id="iNumbers" class="grid grid-cols-5 gap-2"></div>
        </div>
        <div class="mb-4">
          <h3 class="text-lg font-semibold">N (31-45)</h3>
          <div id="nNumbers" class="grid grid-cols-5 gap-2"></div>
        </div>
        <div class="mb-4">
          <h3 class="text-lg font-semibold">G (46-60)</h3>
          <div id="gNumbers" class="grid grid-cols-5 gap-2"></div>
        </div>
        <div class="mb-4">
          <h3 class="text-lg font-semibold">O (61-75)</h3>
          <div id="oNumbers" class="grid grid-cols-5 gap-2"></div>
        </div>
      </div>
    </div>
  </div>
  <script>
    function getBingoLetter(number) {
      if (number >= 1 && number <= 15) return 'B';
      if (number >= 16 && number <= 30) return 'I';
      if (number >= 31 && number <= 45) return 'N';
      if (number >= 46 && number <= 60) return 'G';
      if (number >= 61 && number <= 75) return 'O';
      return '';
    }

    const ws = new WebSocket('wss://' + window.location.host);
    ws.onmessage = (event) => {
      const data = JSON.parse(event.data);
      if (data.type === 'update') {
        updateUI(data.game, data.winners || []);
      }
    };

    function updateUI(game, winners) {
      document.getElementById('startMessage').classList.toggle('hidden', game.drawnNumbers.length > 0);
      document.getElementById('startMessage').textContent = game.startMessage || 'Em Breve o Bingo Irá Começar';
      document.getElementById('currentPrize').textContent = game.currentPrize || '--';
      document.getElementById('additionalInfo').textContent = game.additionalInfo || '--';
      document.getElementById('lastNumber').textContent = game.lastNumber ? `${getBingoLetter(game.lastNumber)}-${game.lastNumber}` : '--';
      const bNumbersDiv = document.getElementById('bNumbers');
      const iNumbersDiv = document.getElementById('iNumbers');
      const nNumbersDiv = document.getElementById('nNumbers');
      const gNumbersDiv = document.getElementById('gNumbers');
      const oNumbersDiv = document.getElementById('oNumbers');
      bNumbersDiv.innerHTML = '';
      iNumbersDiv.innerHTML = '';
      nNumbersDiv.innerHTML = '';
      gNumbersDiv.innerHTML = '';
      oNumbersDiv.innerHTML = '';
      const bNumbers = game.drawnNumbers.filter(n => n >= 1 && n <= 15).sort((a, b) => a - b);
      const iNumbers = game.drawnNumbers.filter(n => n >= 16 && n <= 30).sort((a, b) => a - b);
      const nNumbers = game.drawnNumbers.filter(n => n >= 31 && n <= 45).sort((a, b) => a - b);
      const gNumbers = game.drawnNumbers.filter(n => n >= 46 && n <= 60).sort((a, b) => a - b);
      const oNumbers = game.drawnNumbers.filter(n => n >= 61 && n <= 75).sort((a, b) => a - b);
      bNumbers.forEach(num => {
        const numDiv = document.createElement('div');
        numDiv.className = 'bg-gray-200 p-2 rounded text-center';
        numDiv.textContent = `B-${num}`;
        bNumbersDiv.appendChild(numDiv);
      });
      iNumbers.forEach(num => {
        const numDiv = document.createElement('div');
        numDiv.className = 'bg-gray-200 p-2 rounded text-center';
        numDiv.textContent = `I-${num}`;
        iNumbersDiv.appendChild(numDiv);
      });
      nNumbers.forEach(num => {
        const numDiv = document.createElement('div');
        numDiv.className = 'bg-gray-200 p-2 rounded text-center';
        numDiv.textContent = `N-${num}`;
        nNumbersDiv.appendChild(numDiv);
      });
      gNumbers.forEach(num => {
        const numDiv = document.createElement('div');
        numDiv.className = 'bg-gray-200 p-2 rounded text-center';
        numDiv.textContent = `G-${num}`;
        gNumbersDiv.appendChild(numDiv);
      });
      oNumbers.forEach(num => {
        const numDiv = document.createElement('div');
        numDiv.className = 'bg-gray-200 p-2 rounded text-center';
        numDiv.textContent = `O-${num}`;
        oNumbersDiv.appendChild(numDiv);
      });
    }

    // Carregar estado inicial
    fetch('/game').then(res => res.json()).then(game => updateUI(game, []));
  </script>
</body>
</html>
