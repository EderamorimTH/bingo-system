<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cartelas do Bingo</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/styles.css">
  <link rel="icon" href="data:;base64,iVBORw0KGgo=">
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
  <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-4xl">
    <h1 class="text-3xl font-bold text-center mb-6 text-green-600"><%= playerName %></h1>
    <div id="startMessage" class="text-xl font-semibold text-center mb-4 animate-pulse <%= game.drawnNumbers.length > 0 ? 'hidden' : '' %>">
      <%= game.startMessage || 'Em Breve o Bingo Irá Começar' %>
    </div>
    <div class="mb-4">
      <h2 class="text-xl font-semibold text-center">Prêmio Atual</h2>
      <p id="currentPrize" class="text-lg text-center"><%= game.currentPrize || '--' %></p>
    </div>
    <div class="mb-4">
      <h2 class="text-xl font-semibold text-center">Informações Adicionais</h2>
      <p id="additionalInfo" class="text-lg text-center"><%= game.additionalInfo || '--' %></p>
    </div>
    <% cartelas.forEach((cartela, index) => { %>
      <div class="mb-8">
        <h2 class="text-xl font-semibold mb-2">Cartela <%= index + 1 %> (ID: <%= cartela.cartelaId %>)</h2>
        <div id="winnerMessage-<%= cartela.cartelaId %>" class="text-xl font-bold text-green-600 text-center hidden">Parabéns! Esta cartela venceu!</div>
        <table class="w-full border-collapse">
          <thead>
            <tr class="bg-gray-200">
              <th class="border p-2">B</th>
              <th class="border p-2">I</th>
              <th class="border p-2">N</th>
              <th class="border p-2">G</th>
              <th class="border p-2">O</th>
            </tr>
          </thead>
          <tbody>
            <% for (let row = 0; row < 5; row++) { %>
              <tr>
                <% for (let col = 0; col < 5; col++) { %>
                  <td class="border p-2 text-center <%= cartela.markedNumbers.includes(cartela.numbers[col][row]) ? 'bg-yellow-300' : '' %>">
                    <%= cartela.numbers[col][row] === 0 ? 'X' : cartela.numbers[col][row] %>
                  </td>
                <% } %>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    <% }) %>
  </div>
  <script>
    const ws = new WebSocket('wss://' + window.location.host);
    ws.onmessage = (event) => {
      const data = JSON.parse(event.data);
      if (data.type === 'update') {
        updateUI(data.game, data.winners || []);
      }
    };

    function updateUI(game, winners) {
      document.getElementById('startMessage').classList.toggle('hidden', game.drawnNumbers.length > 0);
      document.getElementById('startMessage').textContent = game.startMessage || 'Em Breve o Bingo Irá Começar';
      document.getElementById('currentPrize').textContent = game.currentPrize || '--';
      document.getElementById('additionalInfo').textContent = game.additionalInfo || '--';
      <% cartelas.forEach(cartela => { %>
        const winnerMessage = document.getElementById('winnerMessage-<%= cartela.cartelaId %>');
        if (winners.includes('<%= cartela.cartelaId %>')) {
          winnerMessage.classList.remove('hidden');
        } else {
          winnerMessage.classList.add('hidden');
        }
        const table = winnerMessage.nextElementSibling;
        for (let row = 0; row < 5; row++) {
          for (let col = 0; col < 5; col++) {
            const num = <%= JSON.stringify(cartela.numbers) %>[col][row];
            const cell = table.rows[row + 1].cells[col];
            if (game.drawnNumbers.includes(num)) {
              cell.classList.add('bg-yellow-300');
            } else {
              cell.classList.remove('bg-yellow-300');
            }
          }
        }
      <% }) %>
    }

    // Carregar estado inicial
    fetch('/game').then(res => res.json()).then(game => updateUI(game, []));
  </script>
</body>
</html>
