<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Painel de Administração - Bingo</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/styles.css">
  <link rel="icon" href="data:;base64,iVBORw0KGgo=">
  <style>
    body {
      background: linear-gradient(135deg, #34d399, #3b82f6);
      font-family: 'Arial', sans-serif;
    }
    .highlight-box {
      background: rgba(255, 255, 255, 0.9);
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
      padding: 1.5rem;
      margin-bottom: 1.5rem;
    }
  </style>
</head>
<body class="flex items-center justify-center min-h-screen">
  <div class="w-full max-w-4xl p-6">
    <h1 class="text-4xl font-bold text-center mb-6 text-white drop-shadow-lg">Painel de Administração</h1>
    
    <!-- Gerar Cartela -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Gerar Cartela</h2>
      <form id="generateCartelaForm" class="space-y-4">
        <div>
          <label for="playerName" class="block text-sm font-medium text-gray-700">Nome do Jogador</label>
          <input type="text" id="playerName" name="playerName" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500">
        </div>
        <div>
          <label for="phoneNumber" class="block text-sm font-medium text-gray-700">Número de Telefone (opcional)</label>
          <input type="text" id="phoneNumber" name="phoneNumber" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500">
        </div>
        <div>
          <label for="quantity" class="block text-sm font-medium text-gray-700">Quantidade de Cartelas</label>
          <input type="number" id="quantity" name="quantity" min="1" value="1" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500">
        </div>
        <button type="submit" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Gerar Cartela(s)</button>
      </form>
    </div>

    <!-- Atualizar Prêmio -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Atualizar Prêmio Atual</h2>
      <form id="updatePrizeForm" class="space-y-4">
        <div>
          <label for="currentPrize" class="block text-sm font-medium text-gray-700">Prêmio Atual</label>
          <input type="text" id="currentPrize" name="currentPrize" value="<%= game.currentPrize || '' %>" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500">
        </div>
        <button type="submit" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Atualizar Prêmio</button>
      </form>
    </div>

    <!-- Atualizar Informações Adicionais -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Atualizar Informações Adicionais</h2>
      <form id="updateInfoForm" class="space-y-4">
        <div>
          <label for="additionalInfo" class="block text-sm font-medium text-gray-700">Informações Adicionais</label>
          <input type="text" id="additionalInfo" name="additionalInfo" value="<%= game.additionalInfo || '' %>" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500">
        </div>
        <button type="submit" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Atualizar Informações</button>
      </form>
    </div>

    <!-- Atualizar Mensagem Inicial -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Atualizar Mensagem Inicial</h2>
      <form id="updateStartMessageForm" class="space-y-4">
        <div>
          <label for="startMessage" class="block text-sm font-medium text-gray-700">Mensagem Inicial</label>
          <input type="text" id="startMessage" name="startMessage" value="<%= game.startMessage || 'Em Breve o Bingo Irá Começar' %>" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500">
        </div>
        <button type="submit" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Atualizar Mensagem</button>
      </form>
    </div>

    <!-- Números Sorteados -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Números Sorteados</h2>

      <!-- Apenas ACRÉSCIMO abaixo: mantive seu bloco e só criei um “lado” para o último número -->
      <div class="flex items-start justify-between">
<div id="drawnNumbers" class="space-y-2">
        <div>
          <strong>B (1-15):</strong> <span id="drawnB">--</span>
        </div>
        <div>
          <strong>I (16-30):</strong> <span id="drawnI">--</span>
        </div>
        <div>
          <strong>N (31-45):</strong> <span id="drawnN">--</span>
        </div>
        <div>
          <strong>G (46-60):</strong> <span id="drawnG">--</span>
        </div>
        <div>
          <strong>O (61-75):</strong> <span id="drawnO">--</span>
        </div>
      </div>

      <!-- Último número grande (apenas adição, sem alterar o design existente) -->
      <div class="ml-8 text-center">
        <h3 class="text-lg font-semibold text-gray-700">Último Número</h3>
        <div id="lastNumberDisplay" class="text-7xl font-extrabold text-blue-600 mt-2">--</div>
      </div>
    </div>

      <div class="mt-4 space-y-4">
        <!-- Sorteio Automático -->
        <div>
          <button id="drawNumber" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Sortear Número (Automático)</button>
        </div>
        <!-- Marcação Manual -->
        <form id="markNumberForm" class="space-y-4">
          <div>
            <label for="manualNumber" class="block text-sm font-medium text-gray-700">Marcar Número Manual (1-75)</label>
            <input type="number" id="manualNumber" name="number" min="1" max="75" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
          </div>
          <div>
            <label for="manualPassword" class="block text-sm font-medium text-gray-700">Senha</label>
            <input type="password" id="manualPassword" name="password" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
          </div>
          <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Marcar Número (Manual)</button>
        </form>
      </div>
    </div>

    <!-- Ações -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Ações</h2>
      <div class="flex space-x-4">
        <button id="resetBingo" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Reiniciar o Bingo</button>
        <button id="deleteAllCartelas" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Excluir Todas as Cartelas</button>
        <button id="deleteByPhone" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300">Excluir por Número de Telefone</button>
      </div>
    </div>

    <!-- Modal para Reiniciar o Bingo -->
    <div id="resetModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center hidden">
      <div class="bg-white p-6 rounded-lg shadow-lg">
        <h2 class="text-xl font-semibold mb-4">Confirmar Reinicialização do Bingo</h2>
        <form id="resetForm">
          <div class="mb-4">
            <label for="resetPassword" class="block text-sm font-medium text-gray-700">Senha</label>
            <input type="password" id="resetPassword" name="password" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500">
          </div>
          <div class="flex justify-end space-x-4">
            <button type="button" id="cancelReset" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg">Cancelar</button>
            <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg">Reiniciar</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal para Excluir Todas as Cartelas -->
    <div id="deleteAllModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center hidden">
      <div class="bg-white p-6 rounded-lg shadow-lg">
        <h2 class="text-xl font-semibold mb-4">Confirmar Exclusão de Todas as Cartelas</h2>
        <form id="deleteAllForm">
          <div class="mb-4">
            <label for="deleteAllPassword" class="block text-sm font-medium text-gray-700">Senha</label>
            <input type="password" id="deleteAllPassword" name="password" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500">
          </div>
          <div class="flex justify-end space-x-4">
            <button type="button" id="cancelDeleteAll" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg">Cancelar</button>
            <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg">Excluir</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal para Excluir por Número de Telefone -->
    <div id="deletePhoneModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center hidden">
      <div class="bg-white p-6 rounded-lg shadow-lg">
        <h2 class="text-xl font-semibold mb-4">Excluir Cartelas por Número de Telefone</h2>
        <form id="deletePhoneForm">
          <div class="mb-4">
            <label for="deletePhoneNumber" class="block text-sm font-medium text-gray-700">Número de Telefone</label>
            <input type="text" id="deletePhoneNumber" name="phoneNumber" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500">
          </div>
          <div class="mb-4">
            <label for="deletePhonePassword" class="block text-sm font-medium text-gray-700">Senha</label>
            <input type="password" id="deletePhonePassword" name="password" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500">
          </div>
          <div class="flex justify-end space-x-4">
            <button type="button" id="cancelDeletePhone" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg">Cancelar</button>
            <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg">Excluir</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Jogadores e Links -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Jogadores e Links</h2>
      <table class="w-full border-collapse">
        <thead>
          <tr class="bg-gray-200">
            <th class="border p-2">Nome</th>
            <th class="border p-2">Telefone</th>
            <th class="border p-2">Cartelas</th>
            <th class="border p-2">Link</th>
          </tr>
        </thead>
        <tbody id="playersTable"></tbody>
      </table>
    </div>

    <!-- Vencedores -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Vencedores</h2>
      <table class="w-full border-collapse">
        <thead>
          <tr class="bg-gray-200">
            <th class="border p-2">Nome</th>
            <th class="border p-2">Cartela ID</th>
            <th class="border p-2">Data</th>
          </tr>
        </thead>
        <tbody id="winnersTable"></tbody>
      </table>
    </div>
  </div>

  <script>
    // Função para formatar números sorteados por letras
    function formatDrawnNumbers(numbers, lastNumber) {
      const ranges = {
        B: { min: 1, max: 15, numbers: [] },
        I: { min: 16, max: 30, numbers: [] },
        N: { min: 31, max: 45, numbers: [] },
        G: { min: 46, max: 60, numbers: [] },
        O: { min: 61, max: 75, numbers: [] }
      };
      numbers.forEach(num => {
        if (num >= 1 && num <= 15) ranges.B.numbers.push(`B-${num}`);
        else if (num >= 16 && num <= 30) ranges.I.numbers.push(`I-${num}`);
        else if (num >= 31 && num <= 45) ranges.N.numbers.push(`N-${num}`);
        else if (num >= 46 && num <= 60) ranges.G.numbers.push(`G-${num}`);
        else if (num >= 61 && num <= 75) ranges.O.numbers.push(`O-${num}`);
      });
      document.getElementById('drawnB').textContent = ranges.B.numbers.length > 0 ? ranges.B.numbers.join(', ') : '--';
      document.getElementById('drawnI').textContent = ranges.I.numbers.length > 0 ? ranges.I.numbers.join(', ') : '--';
      document.getElementById('drawnN').textContent = ranges.N.numbers.length > 0 ? ranges.N.numbers.join(', ') : '--';
      document.getElementById('drawnG').textContent = ranges.G.numbers.length > 0 ? ranges.G.numbers.join(', ') : '--';
      document.getElementById('drawnO').textContent = ranges.O.numbers.length > 0 ? ranges.O.numbers.join(', ') : '--';

      // Atualizar último número em destaque
      var lastEl = document.getElementById('lastNumberDisplay');
      if (lastEl) {
        lastEl.textContent = (lastNumber || lastNumber === 0) ? lastNumber : '--';
      }
    }

    // Carregar números sorteados iniciais
    formatDrawnNumbers(<%- JSON.stringify(game.drawnNumbers) %>, <%- JSON.stringify(game.lastNumber) %>);

    // WebSocket para atualizar números sorteados
    const ws = new WebSocket((location.protocol === 'https:' ? 'wss://' : 'ws://') + window.location.host);
    ws.onopen = () => console.log('WebSocket conectado em /admin');
    ws.onmessage = (event) => {
      console.log('Mensagem WebSocket recebida em /admin:', event.data);
      try {
        const data = JSON.parse(event.data);
        if (data.type === 'update') {
          formatDrawnNumbers(data.game.drawnNumbers || [], data.game.lastNumber);
          fetchPlayers();
          fetchWinners();
        }
      } catch (err) {
        console.error('Erro ao processar mensagem WebSocket em /admin:', err);
      }
    };
    ws.onerror = (err) => console.error('Erro no WebSocket em /admin:', err);
    ws.onclose = () => {
      console.log('WebSocket desconectado em /admin, tentando reconectar...');
      setTimeout(() => {
        window.location.reload();
      }, 5000);
    };

    // (restante do JS permanece igual: gerar cartela, atualizar prêmio, info, etc...)
    // ...
    // Código original de eventos e fetchPlayers/fetchWinners continua
  </script>
</body>
</html>
