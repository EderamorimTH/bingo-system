<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Painel de Administração</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <div class="container">
    <h1>Painel de Administração</h1>

    <div class="section">
      <h2>Atribuir Cartelas</h2>
      <form id="assignCartelasForm">
        <div class="form-group">
          <label for="cartelaNumbers">Números das Cartelas (separados por vírgula)</label>
          <input type="text" id="cartelaNumbers" name="cartelaNumbers" required>
        </div>
        <div class="form-group">
          <label for="playerName">Nome do Jogador</label>
          <input type="text" id="playerName" name="playerName" required>
        </div>
        <div class="form-group">
          <label for="phoneNumber">Número de Telefone</label>
          <input type="text" id="phoneNumber" name="phoneNumber">
        </div>
        <button type="submit">Atribuir</button>
      </form>
    </div>

    <div class="section">
      <h2>Atualizar Prêmio Atual</h2>
      <form id="updatePrizeForm">
        <div class="form-group">
          <label for="currentPrize">Prêmio Atual</label>
          <input type="text" id="currentPrize" name="currentPrize" value="<%= game.currentPrize || '' %>">
        </div>
        <button type="submit">Atualizar Prêmio</button>
      </form>
    </div>

    <div class="section">
      <h2>Atualizar Informações Adicionais</h2>
      <form id="updateInfoForm">
        <div class="form-group">
          <label for="additionalInfo">Informações Adicionais</label>
          <input type="text" id="additionalInfo" name="additionalInfo" value="<%= game.additionalInfo || '' %>">
        </div>
        <button type="submit">Atualizar Informações</button>
      </form>
    </div>

    <div class="section">
      <h2>Atualizar Mensagem Inicial</h2>
      <form id="updateStartMessageForm">
        <div class="form-group">
          <label for="startMessage">Mensagem Inicial</label>
          <input type="text" id="startMessage" name="startMessage" value="<%= game.startMessage || 'Em Breve o Bingo Irá Começar' %>">
        </div>
        <button type="submit">Atualizar Mensagem</button>
      </form>
    </div>

    <div class="section">
      <h2>Números Sorteados</h2>
      <div id="drawnNumbers">
        <p>B (1-15): <span id="numbersB"><%= Array.isArray(game.drawnNumbers) ? game.drawnNumbers.filter(n => n >= 1 && n <= 15).join(', ') || '--' : '--' %></span></p>
        <p>I (16-30): <span id="numbersI"><%= Array.isArray(game.drawnNumbers) ? game.drawnNumbers.filter(n => n >= 16 && n <= 30).join(', ') || '--' : '--' %></span></p>
        <p>N (31-45): <span id="numbersN"><%= Array.isArray(game.drawnNumbers) ? game.drawnNumbers.filter(n => n >= 31 && n <= 45).join(', ') || '--' : '--' %></span></p>
        <p>G (46-60): <span id="numbersG"><%= Array.isArray(game.drawnNumbers) ? game.drawnNumbers.filter(n => n >= 46 && n <= 60).join(', ') || '--' : '--' %></span></p>
        <p>O (61-75): <span id="numbersO"><%= Array.isArray(game.drawnNumbers) ? game.drawnNumbers.filter(n => n >= 61 && n <= 75).join(', ') || '--' : '--' %></span></p>
      </div>
      <form id="drawForm">
        <button type="submit">Sortear Número (Automático)</button>
      </form>
      <form id="markNumberForm">
        <div class="form-group">
          <label for="number">Marcar Número Manual (1-75)</label>
          <input type="number" id="number" name="number" min="1" max="75" required>
        </div>
        <div class="form-group">
          <label for="password">Senha</label>
          <input type="password" id="password" name="password" required>
        </div>
        <button type="submit">Marcar Número (Manual)</button>
      </form>
    </div>

    <div class="section">
      <h2>Ações</h2>
      <button onclick="showResetModal()">Reiniciar o Bingo</button>
      <button onclick="showDeleteAllModal()">Excluir Todas as Cartelas</button>
      <button onclick="showDeleteByPhoneModal()">Excluir por Número de Telefone</button>
    </div>

    <div id="resetModal" class="modal" style="display: none;">
      <div class="modal-content">
        <h2>Confirmar Reinicialização do Bingo</h2>
        <form id="resetForm">
          <div class="form-group">
            <label for="resetPassword">Senha</label>
            <input type="password" id="resetPassword" name="password" required>
          </div>
          <button type="button" onclick="closeResetModal()">Cancelar</button>
          <button type="submit">Reiniciar</button>
        </form>
      </div>
    </div>

    <div id="deleteAllModal" class="modal" style="display: none;">
      <div class="modal-content">
        <h2>Confirmar Exclusão de Todas as Cartelas</h2>
        <form id="deleteAllForm">
          <div class="form-group">
            <label for="deleteAllPassword">Senha</label>
            <input type="password" id="deleteAllPassword" name="password" required>
          </div>
          <button type="button" onclick="closeDeleteAllModal()">Cancelar</button>
          <button type="submit">Excluir</button>
        </form>
      </div>
    </div>

    <div id="deleteByPhoneModal" class="modal" style="display: none;">
      <div class="modal-content">
        <h2>Excluir Cartelas por Número de Telefone</h2>
        <form id="deleteByPhoneForm">
          <div class="form-group">
            <label for="phoneNumber">Número de Telefone</label>
            <input type="text" id="phoneNumber" name="phoneNumber" required>
          </div>
          <div class="form-group">
            <label for="deleteByPhonePassword">Senha</label>
            <input type="password" id="deleteByPhonePassword" name="password" required>
          </div>
          <button type="button" onclick="closeDeleteByPhoneModal()">Cancelar</button>
          <button type="submit">Excluir</button>
        </form>
      </div>
    </div>

    <div id="addCartelasModal" class="modal" style="display: none;">
      <div class="modal-content">
        <h2>Adicionar Mais Cartelas</h2>
        <form id="addCartelasForm">
          <div class="form-group">
            <label for="addCartelaNumbers">Números das Cartelas (separados por vírgula)</label>
            <input type="text" id="addCartelaNumbers" name="cartelaNumbers" required>
          </div>
          <div class="form-group">
            <label for="addPlayerName">Nome do Jogador</label>
            <input type="text" id="addPlayerName" name="playerName" readonly>
          </div>
          <button type="button" onclick="closeAddCartelasModal()">Cancelar</button>
          <button type="submit">Adicionar</button>
        </form>
      </div>
    </div>

    <div class="section">
      <h2>Jogadores e Links</h2>
      <table>
        <thead>
          <tr>
            <th>Nome</th>
            <th>Telefone</th>
            <th>Cartelas</th>
            <th>Link</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody id="playersTable">
          <% players.forEach(player => { %>
            <tr>
              <td><%= player.playerName || '-' %></td>
              <td><%= player.phoneNumber || '-' %></td>
              <td><%= player.cartelaIds.join(', ') || '-' %></td>
              <td><a href="<%= player.link %>" target="_blank">Ver Cartelas</a></td>
              <td>
                <button onclick="copyToClipboard('<%= player.link %>')">Copiar</button>
                <button onclick="showAddCartelasModal('<%= player.playerName %>')">Adicionar Cartelas</button>
              </td>
            </tr>
          <% }) %>
          <% if (players.length === 0) { %>
            <tr>
              <td colspan="5">Nenhum jogador registrado</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <div class="section">
      <h2>Vencedores</h2>
      <table>
        <thead>
          <tr>
            <th>Nome</th>
            <th>Telefone</th>
            <th>Cartela</th>
            <th>Prêmio</th>
            <th>Data</th>
          </tr>
        </thead>
        <tbody id="winnersTable">
          <% winners.forEach(winner => { %>
            <tr>
              <td><%= winner.playerName || '-' %></td>
              <td><%= winner.phoneNumber || '-' %></td>
              <td><%= winner.cartelaId %></td>
              <td><%= winner.prize || '-' %></td>
              <td><%= new Date(winner.createdAt).toLocaleString('pt-BR') %></td>
            </tr>
          <% }) %>
          <% if (winners.length === 0) { %>
            <tr>
              <td colspan="5">Nenhum vencedor</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>

  <script>
    function copyToClipboard(text) {
      navigator.clipboard.writeText(text).then(() => {
        alert('Link copiado para a área de transferência!');
      }).catch(err => {
        console.error('Erro ao copiar link:', err);
        alert('Erro ao copiar o link');
      });
    }

    function showResetModal() {
      document.getElementById('resetModal').style.display = 'block';
    }

    function closeResetModal() {
      document.getElementById('resetModal').style.display = 'none';
    }

    function showDeleteAllModal() {
      document.getElementById('deleteAllModal').style.display = 'block';
    }

    function closeDeleteAllModal() {
      document.getElementById('deleteAllModal').style.display = 'none';
    }

    function showDeleteByPhoneModal() {
      document.getElementById('deleteByPhoneModal').style.display = 'block';
    }

    function closeDeleteByPhoneModal() {
      document.getElementById('deleteByPhoneModal').style.display = 'none';
    }

    function showAddCartelasModal(playerName) {
      document.getElementById('addPlayerName').value = playerName;
      document.getElementById('addCartelasModal').style.display = 'block';
    }

    function closeAddCartelasModal() {
      document.getElementById('addCartelasModal').style.display = 'none';
    }

    function submitForm(formId, url, reload = false) {
      const form = document.getElementById(formId);
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const data = Object.fromEntries(formData);
        try {
          const response = await fetch(url, {
            method: 'POST',
            body: JSON.stringify(data),
            headers: { 'Content-Type': 'application/json' }
          });
          const result = await response.json();
          if (result.error) {
            alert(result.error);
          } else {
            if (formId === 'assignCartelasForm' || formId === 'addCartelasForm') {
              alert(`Cartelas ${result.assigned.join(', ')} atribuídas a ${result.playerName}. Link: ${result.link}`);
            } else {
              alert('Ação realizada com sucesso!');
            }
            if (reload) {
              location.reload();
            }
          }
        } catch (err) {
          console.error(`Erro no ${formId}:`, err);
          alert(`Erro ao executar a ação: ${err.message}`);
        }
      });
    }

    submitForm('assignCartelasForm', '/assign-cartelas');
    submitForm('addCartelasForm', '/assign-cartelas', true);
    submitForm('drawForm', '/draw');
    submitForm('markNumberForm', '/mark-number');
    submitForm('updatePrizeForm', '/update-prize');
    submitForm('updateInfoForm', '/update-info');
    submitForm('updateStartMessageForm', '/update-start-message');
    submitForm('resetForm', '/reset', true);
    submitForm('deleteAllForm', '/delete-all', true);
    submitForm('deleteByPhoneForm', '/delete-by-phone', true);

    // WebSocket para atualizações em tempo real
    const ws = new WebSocket('wss://' + window.location.host);
    ws.onmessage = (event) => {
      const data = JSON.parse(event.data);
      if (data.type === 'update') {
        document.getElementById('numbersB').textContent = data.game.drawnNumbers.filter(n => n >= 1 && n <= 15).join(', ') || '--';
        document.getElementById('numbersI').textContent = data.game.drawnNumbers.filter(n => n >= 16 && n <= 30).join(', ') || '--';
        document.getElementById('numbersN').textContent = data.game.drawnNumbers.filter(n => n >= 31 && n <= 45).join(', ') || '--';
        document.getElementById('numbersG').textContent = data.game.drawnNumbers.filter(n => n >= 46 && n <= 60).join(', ') || '--';
        document.getElementById('numbersO').textContent = data.game.drawnNumbers.filter(n => n >= 61 && n <= 75).join(', ') || '--';
        document.getElementById('currentPrize').value = data.game.currentPrize || '';
        document.getElementById('additionalInfo').value = data.game.additionalInfo || '';
        document.getElementById('startMessage').value = data.game.startMessage || 'Em Breve o Bingo Irá Começar';

        // Atualizar tabela de jogadores
        fetch('/admin/data').then(res => res.json()).then(data => {
          const playersTable = document.getElementById('playersTable');
          playersTable.innerHTML = data.players.length > 0
            ? data.players.map(player => `
                <tr>
                  <td>${player.playerName || '-'}</td>
                  <td>${player.phoneNumber || '-'}</td>
                  <td>${player.cartelaIds.join(', ') || '-'}</td>
                  <td><a href="${player.link}" target="_blank">Ver Cartelas</a></td>
                  <td>
                    <button onclick="copyToClipboard('${player.link}')">Copiar</button>
                    <button onclick="showAddCartelasModal('${player.playerName}')">Adicionar Cartelas</button>
                  </td>
                </tr>
              `).join('')
            : '<tr><td colspan="5">Nenhum jogador registrado</td></tr>';

          // Atualizar tabela de vencedores
          const winnersTable = document.getElementById('winnersTable');
          winnersTable.innerHTML = data.winners.length > 0
            ? data.winners.map(winner => `
                <tr>
                  <td>${winner.playerName || '-'}</td>
                  <td>${winner.phoneNumber || '-'}</td>
                  <td>${winner.cartelaId}</td>
                  <td>${winner.prize || '-'}</td>
                  <td>${new Date(winner.createdAt).toLocaleString('pt-BR')}</td>
                </tr>
              `).join('')
            : '<tr><td colspan="5">Nenhum vencedor</td></tr>';

          // Exibir mensagem para o jogador se a cartela for vencedora
          if (data.winners.length > 0) {
            data.winners.forEach(winner => {
              if (winner.playerName && winner.playerName !== 'FIXAS') {
                alert(`Parabéns, ${winner.playerName}! Sua cartela ${winner.cartelaId} completou todos os números e é a vencedora! Prêmio: ${winner.prize || 'Não especificado'}`);
              }
            });
          }
        }).catch(err => {
          console.error('Erro ao atualizar tabelas:', err);
        });
      }
    };

    ws.onclose = () => {
      console.log('Conexão WebSocket fechada, tentando reconectar...');
      setTimeout(() => location.reload(), 5000);
    };
  </script>

  <style>
    .modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background: white;
      padding: 20px;
      border-radius: 5px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    .modal-content button {
      margin: 10px;
    }
  </style>
</body>
</html>
