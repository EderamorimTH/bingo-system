<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Painel de Administração - Bingo</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/styles.css">
  <style>
    body { background: linear-gradient(135deg, #34d399, #3b82f6); font-family: Arial, sans-serif; }
    .highlight-box { background: rgba(255,255,255,0.9); border-radius: 12px; box-shadow: 0 4px 20px rgba(0,0,0,0.2); padding: 1.5rem; margin-bottom: 1.5rem; }
  </style>
</head>
<body class="flex items-center justify-center min-h-screen">
  <div class="w-full max-w-5xl p-6">
    <h1 class="text-4xl font-bold text-center mb-6 text-white drop-shadow-lg">Painel de Administração</h1>

    <!-- Links Fixos -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Links Fixos</h2>
      <ul class="list-disc pl-6">
        <li><a href="/display" target="_blank" class="text-blue-600 hover:underline">Exibição Pública</a></li>
        <li><a href="/sorteador" target="_blank" class="text-blue-600 hover:underline">Sorteador Público</a></li>
        <li><a href="/cartelas-fixas" target="_blank" class="text-blue-600 hover:underline">Todas as 500 Cartelas</a></li>
      </ul>
    </div>

    <!-- Último Número Sorteado -->
    <div class="highlight-box text-center">
      <h2 class="text-xl font-semibold text-gray-700">Último Número Sorteado</h2>
      <p id="lastNumber" class="text-6xl font-bold text-red-600">--</p>
    </div>

    <!-- Números Sorteados -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Números Sorteados</h2>
      <div id="drawnNumbers">
        <p><strong>B (1-15):</strong> <span id="drawnB">--</span></p>
        <p><strong>I (16-30):</strong> <span id="drawnI">--</span></p>
        <p><strong>N (31-45):</strong> <span id="drawnN">--</span></p>
        <p><strong>G (46-60):</strong> <span id="drawnG">--</span></p>
        <p><strong>O (61-75):</strong> <span id="drawnO">--</span></p>
      </div>
      <div class="mt-4">
        <button id="drawNumber" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">Sortear Número (Automático)</button>
        <form id="markNumberForm" class="mt-4 flex space-x-2">
          <input type="number" id="manualNumber" name="number" min="1" max="75" class="border rounded p-2 w-24" placeholder="Nº">
          <input type="password" id="manualPassword" name="password" class="border rounded p-2 w-32" placeholder="Senha">
          <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Marcar</button>
        </form>
      </div>
    </div>

    <!-- Ações -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Ações</h2>
      <div class="flex space-x-4">
        <button id="resetBingo" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded">Reiniciar o Bingo</button>
        <button id="deleteAllCartelas" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Excluir Todas as Cartelas</button>
        <button id="deleteByPhone" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Excluir por Telefone</button>
      </div>
    </div>

    <!-- Vencedores -->
    <div class="highlight-box">
      <h2 class="text-xl font-semibold mb-2 text-gray-700">Vencedores</h2>
      <table class="w-full border-collapse">
        <thead>
          <tr class="bg-gray-200">
            <th class="border p-2">Nome</th>
            <th class="border p-2">Telefone</th>
            <th class="border p-2">Cartela</th>
            <th class="border p-2">Link</th>
          </tr>
        </thead>
        <tbody id="winnersTable"></tbody>
      </table>
    </div>
  </div>

  <script>
    function getLetterNumber(number) {
      if (number >= 1 && number <= 15) return `B-${number}`;
      if (number >= 16 && number <= 30) return `I-${number}`;
      if (number >= 31 && number <= 45) return `N-${number}`;
      if (number >= 46 && number <= 60) return `G-${number}`;
      if (number >= 61 && number <= 75) return `O-${number}`;
      return number;
    }

    function formatDrawnNumbers(numbers) {
      const groups = { B: [], I: [], N: [], G: [], O: [] };
      numbers.forEach(num => {
        if (num <= 15) groups.B.push(`B-${num}`);
        else if (num <= 30) groups.I.push(`I-${num}`);
        else if (num <= 45) groups.N.push(`N-${num}`);
        else if (num <= 60) groups.G.push(`G-${num}`);
        else groups.O.push(`O-${num}`);
      });
      document.getElementById('drawnB').textContent = groups.B.join(', ') || '--';
      document.getElementById('drawnI').textContent = groups.I.join(', ') || '--';
      document.getElementById('drawnN').textContent = groups.N.join(', ') || '--';
      document.getElementById('drawnG').textContent = groups.G.join(', ') || '--';
      document.getElementById('drawnO').textContent = groups.O.join(', ') || '--';
    }

    async function fetchWinners() {
      const res = await fetch('/winners');
      const winners = await res.json();
      const table = document.getElementById('winnersTable');
      table.innerHTML = '';
      winners.forEach(w => {
        const tel = w.phoneNumber ? w.phoneNumber.replace(/(\d{2})(\d{5})(\d{4})/, "($1) $2-****") : '--';
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td class="border p-2">${w.playerName}</td>
          <td class="border p-2">${tel}</td>
          <td class="border p-2">${w.cartelaId}</td>
          <td class="border p-2"><a href="${w.link}" target="_blank" class="text-blue-600">Link</a></td>
        `;
        table.appendChild(tr);
      });
    }

    const ws = new WebSocket('wss://' + window.location.host);
    ws.onmessage = e => {
      const data = JSON.parse(e.data);
      if (data.type === 'update') {
        if (data.game.lastNumber) {
          document.getElementById('lastNumber').textContent = getLetterNumber(data.game.lastNumber);
        }
        formatDrawnNumbers(data.game.drawnNumbers || []);
        fetchWinners();
      }
    };

    fetchWinners();
  </script>
</body>
</html>
